name: immich

services:
  immich-server:
    deploy:
      resources:
        reservations:
          memory: 1024M
    container_name: immich-server
    hostname: immich-server
    image: altran1502/immich-server:release
    volumes:
      - /DATA/Gallery/immich:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    environment:
      - DB_DATABASE_NAME=immich
      - DB_PASSWORD=postgres
      - DB_USERNAME=postgres
    depends_on:
      - redis
      - database
    ports:
      - 2283:3001
    restart: unless-stopped
    networks:
      - immich
    privileged: false

  immich-machine-learning:
    container_name: immich-machine-learning
    hostname: immich-machine-learning
    image: altran1502/immich-machine-learning:release
    environment:
      - DB_DATABASE_NAME=immich
      - DB_PASSWORD=postgres
      - DB_USERNAME=postgres
      # - HTTP_PROXY=http://172.17.0.1:10809
      # - HTTPS_PROXY=http://172.17.0.1:10809
    restart: unless-stopped
    volumes:
      - /DATA/AppData/immich/model-cache:/cache
    networks:
      - immich
    privileged: false

  redis:
    container_name: immich-redis
    hostname: immich-redis
    image: redis:6.2-alpine
    healthcheck:
      test: redis-cli ping || exit 1
    volumes:
      - /DATA/AppData/immich/redis:/data
    restart: unless-stopped
    networks:
      - immich

  database:
    container_name: immich-postgres
    hostname: immich-postgres
    image: tensorchord/pgvecto-rs:pg14-v0.2.0
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: immich
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      - /DATA/AppData/immich/pgdata:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready --dbname='${DB_DATABASE_NAME}' || exit 1; Chksum="$$(psql --dbname='${DB_DATABASE_NAME}' --username='${DB_USERNAME}' --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    command: ["postgres", "-c", "shared_preload_libraries=vectors.so", "-c", 'search_path="$$user", public, vectors', "-c", "logging_collector=on", "-c", "max_wal_size=2GB", "-c", "shared_buffers=512MB", "-c", "wal_compression=on"]
    restart: unless-stopped
    networks:
      - immich

networks:
  immich:
    name: immich

x-casaos:
  architectures:
    - amd64
    - arm64
  main: immich-server
  store_app_id: immich
  category: Gallery
  author: Cp0204
  developer: alextran1502
  icon: https://cdn.jsdelivr.net/gh/Cp0204/CasaOS-AppStore-Play@main/Apps/immich/icon.png
  screenshot_link:
    - https://cdn.jsdelivr.net/gh/Cp0204/CasaOS-AppStore-Play@main/Apps/immich/screenshot-1.png
  thumbnail: https://cdn.jsdelivr.net/gh/Cp0204/CasaOS-AppStore-Play@main/Apps/immich/thumbnail.png
  description:
    en_us: immich is a self-hosted photo and video backup solution for iOS and Android. It offers AI-powered features like object detection, people recognition, and location-based search, giving you complete control over your privacy and data.
    zh_cn: immich 是一款适用于 iOS 和 Android 的自托管照片和视频备份解决方案。它提供了由 AI 支持的功能，例如对象检测、人物识别和基于位置的搜索，使您可以完全控制自己的隐私和数据。
  tagline:
    en_us: High performance self-hosted photo and video backup solution
    zh_cn: 高性能的自托管照片和视频备份方案
  title:
    en_us: immich
  tips:
    before_install:
      en_us: |
        ⚠️ The project is under very active development.
        ⚠️ Expect bugs and breaking changes.
        ⚠️ Do not use the app as the only way to store your photos and videos.
        ⚠️ Always follow 3-2-1 backup plan for your precious photos and videos!
      zh_cn: |
        ⚠️ 本项目正在 非常活跃 地开发中。
        ⚠️ 可能存在 bug 或者随时有重大变更。
        ⚠️ 不要把本软件作为您存储照片或视频的唯一方式。
        ⚠️ 为了您宝贵的照片与视频，请始终遵守 3-2-1 备份方案！
  port_map: "2283"
  scheme: http
  index: /
